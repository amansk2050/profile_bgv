{
  "swagger": "2.0",
  "info": {
     "version": "1.0.0",
     "title": "${Name}_API",
     "contact": {
        "email": "louis.litt@jf-projects.com"
     },
     "license": {
        "name": "Apache 2.0",
        "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
     }
  },
  "tags": [
     {
        "name": "admins",
        "description": "Secured Admin-only calls"
     },
     {
        "name": "developers",
        "description": "Operations available to regular developers"
     }
  ],
  "paths": {
      "/cognitoauth": {
       "options": {
         "consumes": [
           "application/json"
         ],
         "produces": [
           "application/json"
         ],
         "responses": {
           "401": {
               "description": "what went wrong"
             },
               "200": {
             "description": "200 response",
             "headers": {
               "Access-Control-Allow-Origin": {
                 "type": "string"
               },
               "Access-Control-Allow-Methods": {
                 "type": "string"
               },
               "Access-Control-Allow-Headers": {
                 "type": "string"
               }
             }
           }
         },
         "x-amazon-apigateway-integration": {
           "responses": {
             "default": {
               "statusCode": "200",
               "responseParameters": {
                 "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                 "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                 "method.response.header.Access-Control-Allow-Origin": "'*'"
               }
             }
           },
           "requestTemplates": {
             "application/json": "{\"statusCode\": 200}"
           },
           "passthroughBehavior": "when_no_match",
           "type": "mock"
         }
       },
        "x-amazon-apigateway-any-method": {
           "summary": "cognitoauth integration as a api",
           "operationId": "cognitoauth",
           "description": "cognitoauth api for Talkd Application\n",
           "produces": [
              "application/json"
           ],
           "responses": {
               
               "401": {
               "description": "Unauthorize",
               "headers": {
                 "Access-Control-Allow-Origin": {
                   "type": "string"
                 },
                 "Access-Control-Allow-Methods": {
                   "type": "string"
                 },
                 "Access-Control-Allow-Headers": {
                   "type": "string"
                 }
               }
               },
               "200": {
                 "description": "200 response",
                 "headers": {
                   "Access-Control-Allow-Origin": {
                     "type": "string"
                   },
                   "Access-Control-Allow-Methods": {
                     "type": "string"
                   },
                   "Access-Control-Allow-Headers": {
                     "type": "string"
                   }
                 }
               },
               "400": {
                 "description": "Some error occured",
                 "headers": {
                   "Access-Control-Allow-Origin": {
                     "type": "string"
                   },
                   "Access-Control-Allow-Methods": {
                     "type": "string"
                   },
                   "Access-Control-Allow-Headers": {
                     "type": "string"
                   }
                 }
               }
           },
           "x-amazon-apigateway-integration": {
              "credentials": "${APIGatewayARN}",
              "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_cognitoauth:${branchName}/invocations",
              "responses": {
                 "default": {
                   "statusCode": "200",
                   "responseParameters": {
                     "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                     "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                     "method.response.header.Access-Control-Allow-Origin": "'*'"
                   }
                 }
               },
               "requestTemplates": {
                 "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
               },
               "passthroughBehavior": "when_no_templates",
               "httpMethod": "POST",
               "contentHandling": "CONVERT_TO_TEXT",
               "type": "aws"
           }
        }
      },
      "/sendtoclient": {
      "options": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "401": {
            "description": "Unauthorize",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Some error occured",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "{\"statusCode\": 200}"
          },
          "passthroughBehavior": "when_no_match",
          "type": "mock"
        }
      },
      "x-amazon-apigateway-any-method": {
        "summary": "categories integration as a api",
        "operationId": "log",
        "description": "categories api for Talkd Application\n",
        "produces": [
          "application/json"
        ],
        "security": [
          {
            "Authorization": []
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorize",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          },
          "200": {
            "description": "200 response",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          },
          "400": {
            "description": "Some error occured",
            "headers": {
              "Access-Control-Allow-Origin": {
                "type": "string"
              },
              "Access-Control-Allow-Methods": {
                "type": "string"
              },
              "Access-Control-Allow-Headers": {
                "type": "string"
              }
            }
          }
        },
        "x-amazon-apigateway-integration": {
          "credentials": "${APIGatewayARN}",
          "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_sendtoclient:${branchName}/invocations",
          "responses": {
            "default": {
              "statusCode": "200",
              "responseParameters": {
                "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                "method.response.header.Access-Control-Allow-Origin": "'*'"
              }
            }
          },
          "requestTemplates": {
            "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
          },
          "passthroughBehavior": "when_no_templates",
          "httpMethod": "POST",
          "contentHandling": "CONVERT_TO_TEXT",
          "type": "aws"
        }
      }
      },
      "/folder": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_folder:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/file": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_file:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/logo": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_logo:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/users": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_users:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/fileupload": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_fileupload:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/recording": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_recording:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      },
      "/transcribe": {
        "options": {
          "consumes": [
            "application/json"
          ],
          "produces": [
            "application/json"
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "{\"statusCode\": 200}"
            },
            "passthroughBehavior": "when_no_match",
            "type": "mock"
          }
        },
        "x-amazon-apigateway-any-method": {
          "summary": "categories integration as a api",
          "operationId": "log",
          "description": "categories api for Talkd Application\n",
          "produces": [
            "application/json"
          ],
          "security": [
            {
              "Authorization": []
            }
          ],
          "responses": {
            "401": {
              "description": "Unauthorize",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "200": {
              "description": "200 response",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            },
            "400": {
              "description": "Some error occured",
              "headers": {
                "Access-Control-Allow-Origin": {
                  "type": "string"
                },
                "Access-Control-Allow-Methods": {
                  "type": "string"
                },
                "Access-Control-Allow-Headers": {
                  "type": "string"
                }
              }
            }
          },
          "x-amazon-apigateway-integration": {
            "credentials": "${APIGatewayARN}",
            "uri": "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${Region}:188097494660:function:${LambdaPrefixName}_transcribe:${branchName}/invocations",
            "responses": {
              "default": {
                "statusCode": "200",
                "responseParameters": {
                  "method.response.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
                  "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                  "method.response.header.Access-Control-Allow-Origin": "'*'"
                }
              }
            },
            "requestTemplates": {
              "application/json": "#set($allParams = $input.params().querystring)\n{\n\t\"httpMethod\" : \"$context.httpMethod\",\n\t\"body\": $input.json('$'),\n    \"queryStringParameters\" : {\n      #foreach($paramName in $allParams.keySet())\n      \"$paramName\" : \"$util.escapeJavaScript($allParams.get($paramName))\"\n      #if($foreach.hasNext),#end\n      #end\n    },\n    \"headers\": {\n        #foreach($param in $input.params().header.keySet())\n        \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"\n        #if($foreach.hasNext),#end\n        #end\n    }\n}"
            },
            "passthroughBehavior": "when_no_templates",
            "httpMethod": "POST",
            "contentHandling": "CONVERT_TO_TEXT",
            "type": "aws"
          }
        }
      }
  },
  "securityDefinitions": {
     "Authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "x-amazon-apigateway-authtype": "cognito_user_pools",
        "x-amazon-apigateway-authorizer": {
           "providerARNs": [
              "${CognitoARN}"
           ],
           "type": "cognito_user_pools"
        }
     }
  },
  "x-amazon-apigateway-gateway-responses": {
   "DEFAULT_4XX": {
     "statusCode": 401,
     "responseParameters": {
       "gatewayresponse.header.Access-Control-Allow-Methods": "'DELETE,GET,HEAD,OPTIONS,PATCH,POST,PUT'",
       "gatewayresponse.header.Access-Control-Allow-Origin": "'*'",
       "gatewayresponse.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
     }
   }
 },
  "schemes": [
     "https"
  ]
}
